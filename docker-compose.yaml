version: '3.9'

services:
  backend:
    build: ./backend
    container_name: ai-backend
    ports:
      - '3000:3000'
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - ai-langchain-service
      - python-rag-service
    command: npm run start:dev
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - ai-network

  frontend:
    build: ./frontend
    container_name: ai-frontend
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/app
    command: npm run dev
    networks:
      - ai-network
      
  ai-langchain-service:
    build: ./ai-langchain-service
    container_name: ai-langchain
    ports:
      - '3001:3001'
      - '3002:3002' 
    volumes:
      - ./backend/uploads:/app/uploads
      - ./faiss_data:/app/faiss_index
    env_file:
      - ./ai-langchain-service/.env 
    networks:
      - ai-network

    # REPLACED SERVICE
  python-rag-service:
    build: ./python-rag-service  # New Python service directory
    container_name: python-rag
    ports:
      - '8001:8000'  # FastAPI default port
    volumes:
      - ./backend/uploads:/app/uploads  # Same volume as before
      - ./faiss_data:/app/faiss_index   # FAISS data remains compatible
    env_file:
      - ./python-rag-service/.env  # New env file for Python
    networks:
      - ai-network

  db:
    image: postgres:15
    container_name: ai-db
    environment:
      POSTGRES_DB: ai_copilot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5433:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ai-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: ai-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    depends_on:
      - db
    networks:
      - ai-network

volumes:
  pgdata:

networks:
  ai-network:
